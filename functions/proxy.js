// /functions/proxy.js  (Cloudflare Pages Functions 版本)/** * Cloudflare Pages Function to act as a proxy for the Google Gemini API. * This function handles POST requests, forwards them to Google, and returns the response. */export async function onRequestPost(context) {    try {        // 1. 从前端请求中解析出JSON内容        const { apiKey, body } = await context.request.json();        if (!apiKey || !body) {            return new Response(JSON.stringify({ error: 'Missing apiKey or body' }), {                status: 400,                headers: { 'Content-Type': 'application/json' },            });        }        const modelName = 'gemini-2.5-pro'; // 固定模型或从body获取        const googleApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/${modelName}:generateContent?key=${apiKey}`;        // 2. 代替前端，向 Google API 发起请求        const googleResponse = await fetch(googleApiUrl, {            method: 'POST',            headers: {                'Content-Type': 'application/json',            },            body: JSON.stringify(body), // 将前端传来的请求体转发给Google        });        // 3. 获取 Google 的响应        const googleData = await googleResponse.json();                // 4. 将 Google 的响应原封不动地返回给前端        // Cloudflare 要求我们返回一个标准的 Response 对象        return new Response(JSON.stringify(googleData), {            status: googleResponse.status,            headers: { 'Content-Type': 'application/json' },        });    } catch (error) {        console.error('Proxy Error:', error);        return new Response(JSON.stringify({ error: 'Proxy server error' }), {            status: 500,            headers: { 'Content-Type': 'application/json' },        });    }}